IMPLEMENTATION
    TestSet_MchWithVariables_i

REFINES
    TestSet_MchWithVariables

IMPORTS
    copyMchWithVariables

OPERATIONS
    verdict <-- TEST_0_opIncCount =
    BEGIN
        SetVariablesForTest(0);
        VAR aux1,aux2 IN
            aux1 <-- opIncCount(1);
            aux2 <-- OperationForTestGetcountImp;
            IF aux1 = 1 & aux2 = 1 THEN
                verdict := TRUE
            ELSE
                verdict := FALSE
            END
        END
    END;

    verdict <-- TEST_1_opIncCount =
    BEGIN
        SetVariablesForTest(0);
        VAR aux1,aux2 IN
            aux1 <-- opIncCount(10);
            aux2 <-- OperationForTestGetcountImp;
            IF aux1 = 0 & aux2 = 0 THEN
                verdict := TRUE
            ELSE
                verdict := FALSE
            END
        END
    END;

    verdict <-- TEST_0_opRelease =
    BEGIN
        SetVariablesForTest(0);
        VAR aux1,aux2 IN
            aux1 <-- opRelease(0);
            aux2 <-- OperationForTestGetcountImp;
            IF aux1 = 1 & aux2 = 0 THEN
                verdict := TRUE
            ELSE
                verdict := FALSE
            END
        END
    END;

    verdict <-- TEST_1_opRelease =
    BEGIN
        SetVariablesForTest(0);
        VAR aux1,aux2 IN
            aux1 <-- opRelease(1);
            aux2 <-- OperationForTestGetcountImp;
            IF aux1 = 0 & aux2 = 0 THEN
                verdict := TRUE
            ELSE
                verdict := FALSE
            END
        END
    END;

    verdict <-- TEST_0_resetCount =
    BEGIN
        SetVariablesForTest(0);
        VAR aux1 IN
            resetCount;
            aux1 <-- OperationForTestGetcountImp;
            IF aux1 = 0 THEN
                verdict := TRUE
            ELSE
                verdict := FALSE
            END
        END
    END;

    verdict <-- TEST_0_getCount =
    BEGIN
        SetVariablesForTest(0);
        VAR aux1,aux2 IN
            aux1 <-- getCount;
            aux2 <-- OperationForTestGetcountImp;
            IF aux1 = 0 & aux2 = 0 THEN
                verdict := TRUE
            ELSE
                verdict := FALSE
            END
        END
    END
END