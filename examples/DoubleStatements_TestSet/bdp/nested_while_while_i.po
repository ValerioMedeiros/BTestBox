THEORY ProofList IS
_f(1) & _f(4) & opnested_while_while.18,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(25) & _f(24) & _f(45) => _f(53));
_f(1) & _f(4) & opnested_while_while.17,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(25) & _f(24) & _f(45) => _f(51));
_f(1) & _f(4) & opnested_while_while.16,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(25) & _f(23) & _f(45) => _f(52));
_f(1) & _f(4) & opnested_while_while.15,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(25) & _f(23) & _f(45) => _f(51));
_f(1) & _f(4) & opnested_while_while.14,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(22) & _f(15) & _f(16) & _f(17) & _f(21) & _f(43) => _f(50));
_f(1) & _f(4) & opnested_while_while.13,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(22) & _f(15) & _f(16) & _f(17) & _f(21) & _f(20) & _f(45) => _f(49));
_f(1) & _f(4) & opnested_while_while.12,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(22) & _f(15) & _f(16) & _f(17) & _f(21) & _f(19) & _f(45) => _f(48));
_f(1) & _f(4) & opnested_while_while.11,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(22) & _f(15) & _f(16) & _f(17) & _f(21) & _f(45) & _f(31) => _f(47));
_f(1) & _f(4) & opnested_while_while.10,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(22) & _f(15) & _f(16) & _f(17) & _f(21) & _f(45) & _f(29) => _f(46));
_f(1) & _f(4) & opnested_while_while.9,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(22) & _f(15) & _f(16) & _f(17) & _f(18) & _f(43) => _f(44));
_f(1) & _f(4) & opnested_while_while.8,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(22) & _f(15) & _f(16) & _f(17) & _f(18) & _f(39) & _f(33) => _f(42));
_f(1) & _f(4) & opnested_while_while.7,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(22) & _f(15) & _f(16) & _f(17) & _f(18) & _f(39) & _f(40) => _f(41));
_f(1) & _f(4) & opnested_while_while.6,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(22) & _f(15) & _f(16) & _f(17) & _f(36) => _f(38));
_f(1) & _f(4) & opnested_while_while.5,(_f(26) & _f(27) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(36) => _f(37));
_f(1) & _f(4) & opnested_while_while.4,(_f(26) & _f(27) & _f(5) & _f(28) => _f(35));
_f(1) & _f(4) & opnested_while_while.3,(_f(26) & _f(27) & _f(28) & _f(33) => _f(34));
_f(1) & _f(4) & opnested_while_while.2,(_f(26) & _f(27) & _f(28) & _f(31) => _f(32));
_f(1) & _f(4) & opnested_while_while.1,(_f(26) & _f(27) & _f(28) & _f(29) => _f(30))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
btrue;
((xx) : (NAT)) & ((yy) : (NAT)) & ((res1) = (res1)) & ((res2) = (res2));
((res1$1) = (res1)) & ((res2$1) = (res2));
(0 +1 <= 0);
not((0 +1 <= 0));
(0 <= ii$1);
(ii$1 <= xx);
((res1$2) = (ii$1));
(0 <= jj$1);
(jj$1 <= yy);
((res2$2) = (jj$1));
(((0 +1 <= ii$1)) => (((res2$2) = (yy))));
((not((0 +1 <= ii$1))) => (((res2$2) = (0))));
(0 <= jj$2);
(jj$2 <= yy);
((res2$3) = (jj$2));
(jj$2 +1 <= yy);
(0 +1 <= (ii$1 + 1));
not((0 +1 <= (ii$1 + 1)));
not((jj$2 +1 <= yy));
(ii$1 +1 <= xx);
(0 +1 <= xx);
not((0 +1 <= xx));
not((ii$1 +1 <= xx));
((xx) : (NAT));
((yy) : (NAT));
"Loop initialisation";
"Check invariant (0 <= ii)";
(0 <= 0);
"Check invariant (ii <= xx)";
(0 <= xx);
"Check invariant (jj <= yy)";
(0 <= yy);
((0) = (yy));
"Loop variant is positive";
(0 <= (xx - ii$1));
(0 <= (yy - jj$2));
"Loop invariant is preserved";
"Check invariant (0 <= jj)";
(0 <= (jj$2 + 1));
((jj$2 + 1) <= yy);
"Variant is decreasing";
((yy - (jj$2 + 1)) +1 <= (yy - jj$2));
"End of loop";
(0 <= (ii$1 + 1));
((ii$1 + 1) <= xx);
((res2$3) = (yy));
((res2$3) = (0));
((xx - (ii$1 + 1)) +1 <= (xx - ii$1));
((res1$2) = (xx));
((res2$2) = (yy));
((res2$2) = (0));
((xx) : (NAT)) & ((yy) : (NAT))
END
&
THEORY EnumerateX
END
