THEORY ProofList IS
_f(1) & _f(4) & optriple_else_else_else.28,(_f(14) & _f(15) & _f(16) & _f(12) & _f(10) & _f(5) & _f(6) & _f(7) & _f(13) & _f(12) & _f(10) & _f(29) => _f(30));
_f(1) & _f(4) & optriple_else_else_else.27,(_f(14) & _f(15) & _f(16) & _f(12) & _f(10) & _f(5) & _f(6) & _f(7) & _f(8) & _f(27) => _f(28));
_f(1) & _f(4) & optriple_else_else_else.26,(_f(14) & _f(15) & _f(16) & _f(12) & _f(10) & _f(5) & _f(6) & _f(7) & _f(8) & _f(24) & _f(20) => _f(26));
_f(1) & _f(4) & optriple_else_else_else.25,(_f(14) & _f(15) & _f(16) & _f(12) & _f(10) & _f(5) & _f(6) & _f(7) & _f(8) & _f(24) & _f(18) => _f(25));
_f(1) & _f(4) & optriple_else_else_else.24,(_f(14) & _f(15) & _f(16) & _f(12) & _f(10) & _f(5) & _f(6) & _f(7) & _f(22) => _f(23));
_f(1) & _f(4) & optriple_else_else_else.23,(_f(14) & _f(15) & _f(16) & _f(12) & _f(10) & _f(17) & _f(20) => _f(21));
_f(1) & _f(4) & optriple_else_else_else.22,(_f(14) & _f(15) & _f(16) & _f(12) & _f(10) & _f(17) & _f(18) => _f(19));
_f(1) & _f(4) & optriple_else_else_else.21,(_f(14) & _f(15) & _f(16) & _f(12) & _f(9) & _f(5) & _f(6) & _f(7) & _f(13) & _f(12) & _f(9) & _f(29) => _f(30));
_f(1) & _f(4) & optriple_else_else_else.20,(_f(14) & _f(15) & _f(16) & _f(12) & _f(9) & _f(5) & _f(6) & _f(7) & _f(8) & _f(27) => _f(28));
_f(1) & _f(4) & optriple_else_else_else.19,(_f(14) & _f(15) & _f(16) & _f(12) & _f(9) & _f(5) & _f(6) & _f(7) & _f(8) & _f(24) & _f(20) => _f(26));
_f(1) & _f(4) & optriple_else_else_else.18,(_f(14) & _f(15) & _f(16) & _f(12) & _f(9) & _f(5) & _f(6) & _f(7) & _f(8) & _f(24) & _f(18) => _f(25));
_f(1) & _f(4) & optriple_else_else_else.17,(_f(14) & _f(15) & _f(16) & _f(12) & _f(9) & _f(5) & _f(6) & _f(7) & _f(22) => _f(23));
_f(1) & _f(4) & optriple_else_else_else.16,(_f(14) & _f(15) & _f(16) & _f(12) & _f(9) & _f(17) & _f(20) => _f(21));
_f(1) & _f(4) & optriple_else_else_else.15,(_f(14) & _f(15) & _f(16) & _f(12) & _f(9) & _f(17) & _f(18) => _f(19));
_f(1) & _f(4) & optriple_else_else_else.14,(_f(14) & _f(15) & _f(16) & _f(11) & _f(10) & _f(5) & _f(6) & _f(7) & _f(13) & _f(11) & _f(10) & _f(29) => _f(30));
_f(1) & _f(4) & optriple_else_else_else.13,(_f(14) & _f(15) & _f(16) & _f(11) & _f(10) & _f(5) & _f(6) & _f(7) & _f(8) & _f(27) => _f(28));
_f(1) & _f(4) & optriple_else_else_else.12,(_f(14) & _f(15) & _f(16) & _f(11) & _f(10) & _f(5) & _f(6) & _f(7) & _f(8) & _f(24) & _f(20) => _f(26));
_f(1) & _f(4) & optriple_else_else_else.11,(_f(14) & _f(15) & _f(16) & _f(11) & _f(10) & _f(5) & _f(6) & _f(7) & _f(8) & _f(24) & _f(18) => _f(25));
_f(1) & _f(4) & optriple_else_else_else.10,(_f(14) & _f(15) & _f(16) & _f(11) & _f(10) & _f(5) & _f(6) & _f(7) & _f(22) => _f(23));
_f(1) & _f(4) & optriple_else_else_else.9,(_f(14) & _f(15) & _f(16) & _f(11) & _f(10) & _f(17) & _f(20) => _f(21));
_f(1) & _f(4) & optriple_else_else_else.8,(_f(14) & _f(15) & _f(16) & _f(11) & _f(10) & _f(17) & _f(18) => _f(19));
_f(1) & _f(4) & optriple_else_else_else.7,(_f(14) & _f(15) & _f(16) & _f(11) & _f(9) & _f(5) & _f(6) & _f(7) & _f(13) & _f(11) & _f(9) & _f(29) => _f(30));
_f(1) & _f(4) & optriple_else_else_else.6,(_f(14) & _f(15) & _f(16) & _f(11) & _f(9) & _f(5) & _f(6) & _f(7) & _f(8) & _f(27) => _f(28));
_f(1) & _f(4) & optriple_else_else_else.5,(_f(14) & _f(15) & _f(16) & _f(11) & _f(9) & _f(5) & _f(6) & _f(7) & _f(8) & _f(24) & _f(20) => _f(26));
_f(1) & _f(4) & optriple_else_else_else.4,(_f(14) & _f(15) & _f(16) & _f(11) & _f(9) & _f(5) & _f(6) & _f(7) & _f(8) & _f(24) & _f(18) => _f(25));
_f(1) & _f(4) & optriple_else_else_else.3,(_f(14) & _f(15) & _f(16) & _f(11) & _f(9) & _f(5) & _f(6) & _f(7) & _f(22) => _f(23));
_f(1) & _f(4) & optriple_else_else_else.2,(_f(14) & _f(15) & _f(16) & _f(11) & _f(9) & _f(17) & _f(20) => _f(21));
_f(1) & _f(4) & optriple_else_else_else.1,(_f(14) & _f(15) & _f(16) & _f(11) & _f(9) & _f(17) & _f(18) => _f(19))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
btrue;
((xx) : (NAT)) & ((yy) : (NAT)) & ((zz) : (NAT)) & ((res1) = (res1)) & ((res2) = (res2)) & ((res3) = (res3));
((res1$1) = (res1)) & ((res2$1) = (res2)) & ((res3$1) = (res3));
(0 <= ii$1);
(ii$1 <= zz);
((res3$2) = (ii$1));
(ii$1 +1 <= zz);
(yy +1 <= 5);
not((yy +1 <= 5));
(xx +1 <= 5);
not((xx +1 <= 5));
not((ii$1 +1 <= zz));
((xx) : (NAT));
((yy) : (NAT));
((zz) : (NAT));
"Loop initialisation";
"Check invariant (0 <= ii)";
(0 <= 0);
"Check invariant (ii <= zz)";
(0 <= zz);
"Loop variant is positive";
(0 <= (zz - ii$1));
"Loop invariant is preserved";
(0 <= (ii$1 + 1));
((ii$1 + 1) <= zz);
"Variant is decreasing";
((zz - (ii$1 + 1)) +1 <= (zz - ii$1));
"End of loop";
((res3$2) = (zz));
((xx) : (NAT)) & ((yy) : (NAT)) & ((zz) : (NAT))
END
&
THEORY EnumerateX
END
