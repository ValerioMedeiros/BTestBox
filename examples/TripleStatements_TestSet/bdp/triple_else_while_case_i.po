THEORY ProofList IS
_f(1) & _f(4) & optriple_else_while_case.26,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(16) & _f(15) & _f(32) => _f(34));
_f(1) & _f(4) & optriple_else_while_case.25,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(11) & _f(12) & _f(30) => _f(31));
_f(1) & _f(4) & optriple_else_while_case.24,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(11) & _f(12) & _f(27) & _f(23) => _f(29));
_f(1) & _f(4) & optriple_else_while_case.23,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(11) & _f(12) & _f(27) & _f(21) => _f(28));
_f(1) & _f(4) & optriple_else_while_case.22,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(10) & _f(30) => _f(31));
_f(1) & _f(4) & optriple_else_while_case.21,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(10) & _f(27) & _f(23) => _f(29));
_f(1) & _f(4) & optriple_else_while_case.20,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(10) & _f(27) & _f(21) => _f(28));
_f(1) & _f(4) & optriple_else_while_case.19,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(9) & _f(30) => _f(31));
_f(1) & _f(4) & optriple_else_while_case.18,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(9) & _f(27) & _f(23) => _f(29));
_f(1) & _f(4) & optriple_else_while_case.17,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(9) & _f(27) & _f(21) => _f(28));
_f(1) & _f(4) & optriple_else_while_case.16,(_f(17) & _f(18) & _f(19) & _f(15) & _f(5) & _f(6) & _f(7) & _f(8) & _f(25) => _f(26));
_f(1) & _f(4) & optriple_else_while_case.15,(_f(17) & _f(18) & _f(19) & _f(15) & _f(20) & _f(23) => _f(24));
_f(1) & _f(4) & optriple_else_while_case.14,(_f(17) & _f(18) & _f(19) & _f(15) & _f(20) & _f(21) => _f(22));
_f(1) & _f(4) & optriple_else_while_case.13,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(16) & _f(14) & _f(32) => _f(33));
_f(1) & _f(4) & optriple_else_while_case.12,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(11) & _f(12) & _f(30) => _f(31));
_f(1) & _f(4) & optriple_else_while_case.11,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(11) & _f(12) & _f(27) & _f(23) => _f(29));
_f(1) & _f(4) & optriple_else_while_case.10,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(11) & _f(12) & _f(27) & _f(21) => _f(28));
_f(1) & _f(4) & optriple_else_while_case.9,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(10) & _f(30) => _f(31));
_f(1) & _f(4) & optriple_else_while_case.8,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(10) & _f(27) & _f(23) => _f(29));
_f(1) & _f(4) & optriple_else_while_case.7,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(10) & _f(27) & _f(21) => _f(28));
_f(1) & _f(4) & optriple_else_while_case.6,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(9) & _f(30) => _f(31));
_f(1) & _f(4) & optriple_else_while_case.5,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(9) & _f(27) & _f(23) => _f(29));
_f(1) & _f(4) & optriple_else_while_case.4,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(13) & _f(9) & _f(27) & _f(21) => _f(28));
_f(1) & _f(4) & optriple_else_while_case.3,(_f(17) & _f(18) & _f(19) & _f(14) & _f(5) & _f(6) & _f(7) & _f(8) & _f(25) => _f(26));
_f(1) & _f(4) & optriple_else_while_case.2,(_f(17) & _f(18) & _f(19) & _f(14) & _f(20) & _f(23) => _f(24));
_f(1) & _f(4) & optriple_else_while_case.1,(_f(17) & _f(18) & _f(19) & _f(14) & _f(20) & _f(21) => _f(22))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
btrue;
((xx) : (NAT)) & ((yy) : (NAT)) & ((zz) : (NAT)) & ((res1) = (res1)) & ((res2) = (res2)) & ((res3) = (res3));
((res1$1) = (res1)) & ((res2$1) = (res2)) & ((res3$1) = (res3));
(0 <= ii$1);
(ii$1 <= yy);
((res2$2) = (ii$1));
((res3$2) = (zz));
((zz) : (({0})));
((zz) : (({1})));
not(((zz) : (({0}))));
not(((zz) : (({1}))));
(ii$1 +1 <= yy);
(xx +1 <= 5);
not((xx +1 <= 5));
not((ii$1 +1 <= yy));
((xx) : (NAT));
((yy) : (NAT));
((zz) : (NAT));
"Loop initialisation";
"Check invariant (0 <= ii)";
(0 <= 0);
"Check invariant (ii <= yy)";
(0 <= yy);
"Loop variant is positive";
(0 <= (yy - ii$1));
"Loop invariant is preserved";
(0 <= (ii$1 + 1));
((ii$1 + 1) <= yy);
"Variant is decreasing";
((yy - (ii$1 + 1)) +1 <= (yy - ii$1));
"End of loop";
(((zz) : (({zz}))) & ((0) = (0)) & ((res2$2) = (yy)) & ((res3$2) = (zz))) or (((zz) : (({zz}))) & ((0) = (0)) & ((res2$2) = (yy)) & ((res3$2) = (zz)));
(((zz) : (({zz}))) & ((xx) = (xx)) & ((res2$2) = (yy)) & ((res3$2) = (zz))) or (((zz) : (({zz}))) & ((xx) = (xx)) & ((res2$2) = (yy)) & ((res3$2) = (zz)));
((xx) : (NAT)) & ((yy) : (NAT)) & ((zz) : (NAT))
END
&
THEORY EnumerateX
END
