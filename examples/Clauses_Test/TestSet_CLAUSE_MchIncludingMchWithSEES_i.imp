IMPLEMENTATION
    TestSet_CLAUSE_MchIncludingMchWithSEES_i

REFINES
    TestSet_CLAUSE_MchIncludingMchWithSEES

IMPORTS
    MchIncludingMchWithSEES, LockMachine

OPERATIONS
    verdict <-- TEST_0_leavingTheHouse =
    BEGIN
        SetVariablesForTestMchWithSEES(2, 0, 2);
        SetVariablesForTestMchIncludingMchWithSEES(TRUE, 2);
        SetVariablesForTestLockMachine(TRUE);
        VAR aux1, aux2, aux3, aux4, aux5, aux6 IN
            leavingTheHouse(1);
            aux1 <-- OperationForTestGetlightsMchIncludingMchWithSEES;
            aux2 <-- OperationForTestGetinsideIMPMchIncludingMchWithSEES;
            aux3 <-- OperationForTestGetinsideIMPMchWithSEES;
            aux4 <-- OperationForTestGetoutsideIMPMchWithSEES;
            aux5 <-- OperationForTestGettotalIMPMchWithSEES;
            aux6 <-- OperationForTestGetisOpenIMPLockMachine;
            IF aux1 = FALSE & aux2 = 0 & aux3 = 0 & aux4 = 1 & aux5 = 2 & aux6 = TRUE THEN
                verdict := TRUE
            ELSE
                verdict := FALSE
            END
        END
    END;

    verdict <-- TEST_1_leavingTheHouse =
    BEGIN
        SetVariablesForTestMchWithSEES(1, 0, 1);
        SetVariablesForTestMchIncludingMchWithSEES(TRUE, 1);
        SetVariablesForTestLockMachine(TRUE);
        VAR aux1, aux2, aux3, aux4, aux5, aux6 IN
            leavingTheHouse(0);
            aux1 <-- OperationForTestGetlightsMchIncludingMchWithSEES;
            aux2 <-- OperationForTestGetinsideIMPMchIncludingMchWithSEES;
            aux3 <-- OperationForTestGetinsideIMPMchWithSEES;
            aux4 <-- OperationForTestGetoutsideIMPMchWithSEES;
            aux5 <-- OperationForTestGettotalIMPMchWithSEES;
            aux6 <-- OperationForTestGetisOpenIMPLockMachine;
            IF aux1 = TRUE & aux2 = 1 & aux3 = 1 & aux4 = 0 & aux5 = 1 & aux6 = TRUE THEN
                verdict := TRUE
            ELSE
                verdict := FALSE
            END
        END
    END;

    verdict <-- TEST_0_enteringTheHouse =
    BEGIN
        SetVariablesForTestMchWithSEES(1, 0, 1);
        SetVariablesForTestMchIncludingMchWithSEES(TRUE, 1);
        SetVariablesForTestLockMachine(TRUE);
        VAR aux1, aux2, aux3, aux4, aux5, aux6 IN
            enteringTheHouse(0);
            aux1 <-- OperationForTestGetlightsMchIncludingMchWithSEES;
            aux2 <-- OperationForTestGetinsideIMPMchIncludingMchWithSEES;
            aux3 <-- OperationForTestGetinsideIMPMchWithSEES;
            aux4 <-- OperationForTestGetoutsideIMPMchWithSEES;
            aux5 <-- OperationForTestGettotalIMPMchWithSEES;
            aux6 <-- OperationForTestGetisOpenIMPLockMachine;
            IF aux1 = TRUE & aux2 = 1 & aux3 = 1 & aux4 = 0 & aux5 = 1 & aux6 = TRUE THEN
                verdict := TRUE
            ELSE
                verdict := FALSE
            END
        END
    END;

    verdict <-- TEST_1_enteringTheHouse =
    BEGIN
        SetVariablesForTestMchWithSEES(0, 0, 0);
        SetVariablesForTestMchIncludingMchWithSEES(FALSE, 0);
        SetVariablesForTestLockMachine(TRUE);
        VAR aux1, aux2, aux3, aux4, aux5, aux6 IN
            enteringTheHouse(0);
            aux1 <-- OperationForTestGetlightsMchIncludingMchWithSEES;
            aux2 <-- OperationForTestGetinsideIMPMchIncludingMchWithSEES;
            aux3 <-- OperationForTestGetinsideIMPMchWithSEES;
            aux4 <-- OperationForTestGetoutsideIMPMchWithSEES;
            aux5 <-- OperationForTestGettotalIMPMchWithSEES;
            aux6 <-- OperationForTestGetisOpenIMPLockMachine;
            IF aux1 = FALSE & aux2 = 0 & aux3 = 0 & aux4 = 0 & aux5 = 0 & aux6 = TRUE THEN
                verdict := TRUE
            ELSE
                verdict := FALSE
            END
        END
    END
END